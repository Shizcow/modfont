#!/usr/bin/env python

import argparse, os
parser = argparse.ArgumentParser(description='Overwrite one or more glyphs in a font using presupplied SVG files\n\nBy default, reads a list of filenames from stdin in the format\n"CODEPOINT.svg", where CODEPOINT is the 4-digit unicode\nrepresentation of the desired codepoint.\nSutable input can be generated using FIND(1)', formatter_class=argparse.RawTextHelpFormatter)
parser.add_argument('file', type=argparse.FileType('r'), help='Input font file to be modified')
parser.add_argument('-f', '--force', action='store_true', help='Overwrite without confirmation')
parser.add_argument('--dry-run', action='store_true', help='Stop just short of writing file / outputting contents')
parser.add_argument('-o', '--output', help='File to write .ttf file to. If not speified, uses stdout')
parser.add_argument('-p', '--pair', nargs=2, type=str, action='append', help='A codepoint-filename pair in the format "--pair 0071 glyph.svg"\nIf specified, will not read from stdin (as is default)')

args = parser.parse_args()

for pair in args.pair:
    try:
        paircheck = pair[0][2:] if pair[0].startswith("U+") else pair[0]
        int(paircheck, 16)
        if len(paircheck) != 4:
            raise ValueError
    except ValueError:
        parser.print_usage()
        print(os.path.basename(__file__) + ": error: arguement hex: '" + pair[0] + "' not a valid hexidecimal number or unicode code point")
        parser.exit()
    if pair[0].startswith("U+"):
        pair[0] = pair[0][2:] # can't do this earlier because error message
    try:
        argparse.FileType('r')(pair[1])
    except argparse.ArgumentTypeError as e:
        parser.print_usage()
        print(os.path.basename(__file__) + ": error: arguement file: "+str(e))
        parser.exit()
        

exit()

import fontforge
font=fontforge.open("backup-orig.ttf")

glyph = font.createMappedChar(int('0071', 16))
glyph.importOutlines("ethernet-solid.svg")

font.generate("NewFont.ttf")
